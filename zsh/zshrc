export TERM="xterm-256color"

source ~/.zsh_plugins

export VISUAL=nvim
export EDITOR="$VISUAL"

# History size
export HISTSIZE=100000
export HISTFILESIZE=100000
export HISTFILE=~/.zhistory
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS

# Include exports
[[ -f ~/.exports ]] && source ~/.exports
# Include aliases
[[ -f ~/.aliases ]] && source ~/.aliases
# Include functions
[[ -f ~/.functions ]] && source ~/.functions
# Include secrets
[[ -f ~/.secrets ]] && source ~/.secrets

# Key bindings
bindkey -e
bindkey -v
bindkey -v '^?' backward-delete-char
bindkey '^D'  delete-char
bindkey '\e\e[C' forward-word
bindkey '\e\e[D' backward-word

# Completion
autoload -U compinit
compinit

# History
bindkey -M isearch . self-insert # history search fix

# Powerline
function powerline_precmd() {
    PS1="$(~/go/bin/powerline-go -error $? -shell zsh -modules "nix-shell,venv,cwd,perms,git,jobs,exit,root,vgo")"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

# Include fuzzy matching
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
set rtp+=/usr/local/opt/fzf

export CLOUDSDK_PYTHON=python3
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

